<Window x:Class="RevitAddinTesting.Forms.LevelsParentViewsForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RevitAddinTesting.Forms"
        mc:Ignorable="d"
        Title="Create Level Parent Views" 
        Height="600" 
        Width="800" 
        MinHeight="300"
        MinWidth="300"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock Text="Levels" FontWeight="Bold" Margin="0,0,0,5" FontSize="14" />
            <CheckBox x:Name="ChkBox_SelectAllLevels" Content="Select All" Grid.Row="1" Margin="5,0,0,5" Checked="ChkBox_SelectAllLevels_Checked" Unchecked="ChkBox_SelectAllLevels_Unchecked" />
            <ListBox x:Name="LevelsListBox" SelectionMode="Extended" BorderBrush="Gray" BorderThickness="1" Padding="5" 
                     ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="2" PreviewMouseDown="ListBox_PreviewMouseDown">
                <ListBox.ItemTemplate >
                    <DataTemplate>
                        <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected}" Margin="5" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0" VerticalAlignment="Center">
                <TextBlock Text="View Templates" FontWeight="Bold" Margin="0,0,0,5" FontSize="14" />
                <CheckBox x:Name="WildCardCheckBox" Content="* WildCard" Margin="10,0,0,0" VerticalAlignment="Center" IsChecked="{Binding IsWildCardEnabled, Mode=TwoWay}" />
                <!--<CheckBox x:Name="ChkBox_SelectAllTemplates" Content="Select All" Margin="10,0,0,0" VerticalAlignment="Center" Checked="ChkBox_SelectAllTemplates_Checked" Unchecked="ChkBox_SelectAllTemplates_Unchecked" />-->
                <Button Content="Clear" Margin="10,0,0,0" VerticalAlignment="Center" Click="ClearSelectedTemplates_Click" />
            </StackPanel>
            <ComboBox x:Name="FilterComboBox" IsEditable="True" Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}" ToolTip="Filter view templates by name. &#10;The filter is based on the unique prefix of the ViewTemplate Name." Margin="0,0,0,5" Grid.Row="1" />
            <ListBox x:Name="ViewTemplatesListBox" SelectionMode="Extended" BorderBrush="Gray" BorderThickness="1" Padding="5" 
                     ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="2" SelectionChanged="ViewTemplatesListBox_SelectionChanged" PreviewMouseDown="ListBox_PreviewMouseDown">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected}" Margin="5"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <StackPanel Grid.ColumnSpan="2" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
            <Button Content="OK" Width="75" Height="30" Margin="5" Click="OKButton_Click" IsDefault="True" />
            <Button Content="Cancel" Width="75" Height="30" Margin="5" Click="CancelButton_Click" IsCancel="True" />
        </StackPanel>
    </Grid>
</Window>
    <!-- WOrking 1-->
    <!--<Window x:Class="RevitAddinTesting.Forms.LevelsParentViewsForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RevitAddinTesting.Forms"
        mc:Ignorable="d"
        Title="Create Level Parent Views" 
        Height="600" 
        Width="800" 
        MinHeight="300"
        MinWidth="300"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock Text="Levels" FontWeight="Bold" Margin="0,0,0,5" FontSize="14" />
            <CheckBox x:Name="ChkBox_SelectAllLevels" Content="Select All" Grid.Row="1" Margin="5,0,0,5" Checked="ChkBox_SelectAllLevels_Checked" Unchecked="ChkBox_SelectAllLevels_Unchecked" />
            <ListBox x:Name="LevelsListBox" SelectionMode="Extended" BorderBrush="Gray" BorderThickness="1" Padding="5" 
                     ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="2" PreviewMouseDown="ListBox_PreviewMouseDown">
                <ListBox.ItemTemplate >
                    <DataTemplate>
                        <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected}" Margin="5" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0" VerticalAlignment="Center">
                <TextBlock Text="View Templates" FontWeight="Bold" Margin="0,0,0,5" FontSize="14" />
                <CheckBox x:Name="WildCardCheckBox" Content="* WildCard" Margin="10,0,0,0" VerticalAlignment="Center" IsChecked="{Binding IsWildCardEnabled, Mode=TwoWay}" />
                <CheckBox x:Name="ChkBox_SelectAllTemplates" Content="Select All" Margin="10,0,0,0" VerticalAlignment="Center" Checked="ChkBox_SelectAllTemplates_Checked" Unchecked="ChkBox_SelectAllTemplates_Unchecked" />
            </StackPanel>
            <ComboBox x:Name="FilterComboBox" IsEditable="True" Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}" ToolTip="Filter view templates by name. &#10;The filter is based on the unique prefix of the ViewTemplate Name." Margin="0,0,0,5" Grid.Row="1" />
            <ListBox x:Name="ViewTemplatesListBox" SelectionMode="Extended" BorderBrush="Gray" BorderThickness="1" Padding="5" 
                     ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="2" SelectionChanged="ViewTemplatesListBox_SelectionChanged" PreviewMouseDown="ListBox_PreviewMouseDown">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected}" Margin="5"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <StackPanel Grid.ColumnSpan="2" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
            <Button Content="OK" Width="75" Height="30" Margin="5" Click="OKButton_Click" IsDefault="True" />
            <Button Content="Cancel" Width="75" Height="30" Margin="5" Click="CancelButton_Click" IsCancel="True" />
        </StackPanel>
    </Grid>
</Window>-->
    
    
    
<!--<Window x:Class="RevitAddinTesting.Forms.LevelsParentViewsForm"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RevitAddinTesting.Forms"
        mc:Ignorable="d"
        Title="Create Level Parent Views" 
        Height="600" 
        Width="800" 
        MinHeight="300"
        MinWidth="300"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Column="0" Grid.Row="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock Text="Levels" FontWeight="Bold" Margin="0,0,0,5" FontSize="14" />
            <CheckBox x:Name="ChkBox_SelectAllLevels" Content="Select All" Grid.Row="1" Margin="5,0,0,5" Checked="ChkBox_SelectAllLevels_Checked" Unchecked="ChkBox_SelectAllLevels_Unchecked" />
            <ListBox x:Name="LevelsListBox" SelectionMode="Extended" BorderBrush="Gray" BorderThickness="1" Padding="5" 
                     ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="2" PreviewMouseDown="ListBox_PreviewMouseDown">
                <ListBox.ItemTemplate >
                    <DataTemplate>
                        <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected}" Margin="5" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="0" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Orientation="Horizontal" Grid.Row="0" VerticalAlignment="Center">
                <TextBlock Text="View Templates" FontWeight="Bold" Margin="0,0,0,5" FontSize="14" />
                <CheckBox x:Name="WildCardCheckBox" Content="* WildCard" Margin="10,0,0,0" VerticalAlignment="Center" IsChecked="{Binding IsWildCardEnabled, Mode=TwoWay}" />
            </StackPanel>
            <ComboBox x:Name="FilterComboBox" IsEditable="True" Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}" ToolTip="Filter view templates by name. &#10;The filter is based on the unique prefix of the ViewTemplate Name." Margin="0,0,0,5" Grid.Row="1" />
            <ListBox x:Name="ViewTemplatesListBox" SelectionMode="Extended" BorderBrush="Gray" BorderThickness="1" Padding="5" 
                     ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="2" SelectionChanged="ViewTemplatesListBox_SelectionChanged" PreviewMouseDown="ListBox_PreviewMouseDown">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <CheckBox Content="{Binding Name}" IsChecked="{Binding IsSelected}" Margin="5"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>

        <StackPanel Grid.ColumnSpan="2" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
            <Button Content="OK" Width="75" Height="30" Margin="5" Click="OKButton_Click" IsDefault="True" />
            <Button Content="Cancel" Width="75" Height="30" Margin="5" Click="CancelButton_Click" IsCancel="True" />
        </StackPanel>
    </Grid>
</Window>-->

